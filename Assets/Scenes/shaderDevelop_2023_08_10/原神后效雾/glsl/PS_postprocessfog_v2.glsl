#version 450

layout(constant_id = 4) const uint _2 = 0u;

struct _67
{
    float _m0;
    float _m1;
    float _m2;
    float _m3;
};

const float _899[4] = float[](-0.01171875, 0.00390625, 0.01171875, -0.00390625);

layout(set = 1, binding = 1, std140) uniform _61_63
{
    vec3 _m0;
    vec4 _m1;
    vec4 _m2;
    vec4 _m3;
    float _m4;
    vec4 _m5;
    vec4 _m6;
    vec4 _m7;
    vec4 _m8;
    vec4 _m9;
    vec4 _m10;
    vec4 _m11;
    vec4 _m12;
    vec4 _m13;
    vec4 _m14;
    vec4 _m15;
    vec4 _m16;
    vec4 _m17;
    vec4 _m18;
    vec4 _m19;
    vec4 _m20;
    vec4 _m21;
    float _m22;
    vec3 _m23;
    vec4 _m24;
    vec4 _m25;
    float _m26;
} _63;

layout(set = 0, binding = 0, std140) uniform _68_70
{
    vec4 _m0;
    uint _m1;
    uint _m2;
    int _m3;
    int _m4;
    ivec4 _m5;
    uvec4 _m6;
    _67 _m7;
} _70;

layout(set = 2, binding = 0) uniform sampler2D _7;

layout(location = 1) in vec2 _10;
layout(location = 0) in vec3 _13;
layout(location = 0) out vec4 _16;
layout(location = 1) out vec4 _17;
float _19;
bool _22;
vec3 _24;
float _25;
bool _26;
vec3 _27;
float _28;
bool _29;
vec3 _30;
float _31;
float _32;
bool _33;
vec3 _34;
float _35;
vec3 _36;
vec2 _38;
vec3 _39;
vec3 _40;
vec3 _41;
vec2 _42;
bool _43;
float _44;
float _45;
float _46;
float _47;
bool _48;
bool _49;
float _50;
bvec2 _53;
float _54;
float _55;
bool _56;
float _57;
float _58;
float _59;
float _60;
float _918;
uint _922;
vec3 _928 = vec3(255.0);
uint _967;
vec3 _969 = vec3(255.0);

void _73()
{
    _19 = texture(_7, _10).x;
    _19 = (_63._m2.x * _19) + _63._m2.y;
    _19 = 1.0 / _19;
    _41 = vec3(_19) * _13;
    _24 = (_13 * vec3(_19)) + _63._m0;
    _19 *= _63._m1.z;
    _57 = dot(_41, _41);
    _57 = sqrt(_57);
    _27.x = _57 + (-_63._m12.w);
    _29 = _27.x < 0.0;
    if ((int(_29) * (-1)) != 0)
    {
        discard;
    }
    _29 = 0.00999999977648258209228515625 < _63._m16.w;
    if (_29)
    {
        _29 = _63._m21.y < 0.5;
        if (_29)
        {
            _27 = _24 + (-_63._m16.xyz);
            _24.x = dot(_27, _27);
            _24.x = sqrt(_24.x);
            _24.x = (_24.x * _63._m18.z) + _63._m18.w;
            _24.x = clamp(_24.x, 0.0, 1.0);
            _24.x = (-_24.x) + 1.0;
            _30.x = _24.x * _24.x;
            _26 = _63._m4 == 1.0;
            _49 = _27.y < 0.0;
            _26 = _49 && _26;
            _24.x = _26 ? 0.0 : _30.x;
            _25 = _24.x;
        }
        else
        {
            _27.x = _24.y + (-_63._m16.y);
            _44 = 1.0 / _63._m16.w;
            _27.x = _44 * _27.x;
            _27.x = clamp(_27.x, 0.0, 1.0);
            _44 = (_27.x * (-2.0)) + 3.0;
            _27.x *= _27.x;
            _24.x = _27.x * _44;
            _25 = _24.x;
        }
        _29 = _63._m21.x >= 0.0500000007450580596923828125;
        _27.x = float(_29);
        _27.x = _25 * _27.x;
        _33 = 0.949999988079071044921875 >= _63._m21.x;
        _31 = float(_33);
        _31 = _25 * _31;
        _28 = _27.x;
        _32 = _31;
    }
    else
    {
        _28 = 0.0;
        _32 = 0.0;
    }
    _34.x = (_57 * _63._m9.z) + _63._m9.w;
    _34.x = clamp(_34.x, 0.0, 1.0);
    _46 = (_57 * _63._m19.z) + _63._m19.w;
    _46 = clamp(_46, 0.0, 1.0);
    _30.x = (-_34.x) + _46;
    _30.x = (_28 * _30.x) + _34.x;
    _45 = (-_30.x) + 2.0;
    _30.x = _45 * _30.x;
    _41.x = dot(_41.xz, _41.xz);
    _41.x = sqrt(_41.x);
    _54 = (_41.x * _63._m11.x) + _63._m11.y;
    _54 = clamp(_54, 0.0, 1.0);
    _34.x = (_63._m0.y * _63._m11.z) + _63._m11.w;
    _34.x = clamp(_34.x, 0.0, 1.0);
    _46 = _63._m1.z * 0.99989998340606689453125;
    _22 = _19 >= _46;
    _46 = _30.x * _63._m8.w;
    _30.x = _22 ? _46 : _30.x;
    _45 = _22 ? _34.x : _54;
    _19 = (-_63._m3.w) + _63._m20.w;
    _19 = (_28 * _19) + _63._m3.w;
    _55 = _30.x + 9.9999997473787516355514526367188e-05;
    _55 = log2(_55);
    _19 = _55 * _19;
    _19 = exp2(_19);
    _54 = _63._m7.w * _63._m15.x;
    _19 = min(_54, _19);
    _19 = min(_19, 1.0);
    _54 = (_24.y * _63._m9.x) + _63._m9.y;
    _54 = clamp(_54, 0.0, 1.0);
    _30.x = (-_54) + 2.0;
    _30.x = _54 * _30.x;
    _34 = (_30.xxx * _63._m8.xyz) + _63._m7.xyz;
    _36 = (-_34) + _63._m20.xyz;
    _34 = (vec3(_28) * _36) + _34;
    _54 = _57 + (-_63._m6.w);
    _54 *= _63._m10.w;
    _54 = clamp(_54, 0.0, 1.0);
    _36 = (-_34) + _63._m10.xyz;
    _34 = (vec3(_54) * _36) + _34;
    _41.x = (_41.x * _63._m13.z) + _63._m13.w;
    _41.x = clamp(_41.x, 0.0, 1.0);
    _54 = (-_63._m5.y) + _63._m17.w;
    _54 = (_32 * _54) + _63._m5.y;
    vec2 _514 = _41.yy * _63._m5.xz;
    _36 = vec3(_514.x, _514.y, _36.z);
    _53 = lessThan(vec4(0.00999999977648258209228515625), abs(_36.xyxy)).xy;
    _38 = ((-_63._m5.xz) * _41.yy) + _63._m14.yw;
    _38 = min(_38, vec2(80.0));
    _38 *= vec2(1.44269502162933349609375);
    _38 = exp2(_38);
    _38 = (-_38) + _63._m14.xz;
    vec2 _555 = _38 / _36.xy;
    _36 = vec3(_555.x, _555.y, _36.z);
    _36.x = _53.x ? _36.x : _63._m14.x;
    _36.y = _53.y ? _36.y : _63._m14.z;
    _47 = _54 * _57;
    _47 *= (-_36.x);
    _47 = exp2(_47);
    _47 = (-_47) + 1.0;
    _47 = max(_47, 0.0);
    _54 = (_57 * _63._m6.x) + _63._m6.y;
    _54 = clamp(_54, 0.0, 1.0);
    _59 = (_57 * _63._m18.x) + _63._m18.y;
    _59 = clamp(_59, 0.0, 1.0);
    _30.x = (-_54) + _59;
    _30.x = (_32 * _30.x) + _54;
    _50 = (-_30.x) + 2.0;
    _54 = (-_63._m6.z) + _63._m19.x;
    _54 = (_32 * _54) + _63._m6.z;
    _60 = (_30.x * _50) + (-1.0);
    _54 = (_54 * _60) + 1.0;
    _30.x = _54 * _47;
    _47 = min(_30.x, _63._m7.w);
    _54 = _57 * _63._m5.w;
    _54 *= (-_36.y);
    _54 = exp2(_54);
    _54 = (-_54) + 1.0;
    _54 = max(_54, 0.0);
    _59 = (_57 * _63._m13.x) + _63._m13.y;
    _59 = clamp(_59, 0.0, 1.0);
    _30.x = (-_59) + 2.0;
    _30.x *= _59;
    _30.x = _54 * _30.x;
    _54 = min(_30.x, _63._m15.y);
    _30.x = _45 * _47;
    _30.y = _41.x * _54;
    _41 = (-_63._m3.xyz) + _63._m17.xyz;
    _41 = (vec3(_32) * _41) + _63._m3.xyz;
    _39 = vec3(_19) * _34;
    _40 = ((-_34) * vec3(_19)) + _41;
    _39 = (_30.xxx * _40) + _39;
    _19 = (-_19) + 1.0;
    _42 = (-_30.xy) + vec2(1.0);
    _19 = _42.x * _19;
    _30 = (_63._m12.xyz * _30.yyy) + _39;
    _19 = _42.y * _19;
    _43 = any(notEqual(vec4(0.0), vec4(_63._m22)));
    if (_43)
    {
        _41.x = dot(-_63._m0, -_63._m0);
        _41.x = sqrt(_41.x);
        _48 = _63._m24.y >= _41.x;
        _56 = _63._m26 == 1.0;
        _35 = dot(_30, vec3(0.2125000059604644775390625, 0.7153999805450439453125, 0.07209999859333038330078125));
        _34 = vec3(_35 * _63._m23.x, _35 * _63._m23.y, _35 * _63._m23.z);
        _39 = mix(_30, _34, bvec3(_56));
        _54 = (-_63._m24.z) + 1.0;
        _41.x = ((-_63._m24.y) * _54) + _41.x;
        _54 = (_63._m24.y * _63._m24.z) + 9.9999997473787516355514526367188e-05;
        _41.x /= _54;
        _41.x = clamp(_41.x, 0.0, 1.0);
        _58 = (_41.x * (-_63._m25.x)) + _63._m25.x;
        _58 = clamp(_58, 0.0, 1.0);
        _39 = (-_30) + _39;
        _39 = (vec3(_58) * _39) + _30;
        _30 = mix(_30, _39, bvec3(_48));
    }
    _16 = vec4(_30.x, _30.y, _30.z, _16.w);
    _16.w = _19;
    _17 = vec4(_30.x, _30.y, _30.z, _17.w);
    _17.w = _19;
}

void main()
{
    vec3 _925 = vec3(0.0);
    vec3 _968 = vec3(0.0);
    _73();
    if (_2 != 0u)
    {
        _918 = _899[((uint(gl_FragCoord.x) & 1u) << 1u) | (uint(gl_FragCoord.y) & 1u)];
        _922 = (_2 >> 0u) & 3u;
        switch (_922)
        {
            case 1u:
            {
                _925 = vec3(_918 * 2.0);
                _928 = vec3(15.0);
                break;
            }
            case 2u:
            {
                _925 = vec3(_918);
                _928 = vec3(31.0);
                break;
            }
            case 3u:
            {
                _925 = vec3(_918, _918 * 0.5, _918);
                _928 = vec3(31.0, 63.0, 31.0);
                break;
            }
        }
        vec3 _953 = _16.xyz + _925;
        _16 = vec4(_953.x, _953.y, _953.z, _16.w);
        vec3 _962 = round(_16.xyz * _928) / _928;
        _16 = vec4(_962.x, _962.y, _962.z, _16.w);
        _967 = (_2 >> 2u) & 3u;
        switch (_967)
        {
            case 1u:
            {
                _968 = vec3(_918 * 2.0);
                _969 = vec3(15.0);
                break;
            }
            case 2u:
            {
                _968 = vec3(_918);
                _969 = vec3(31.0);
                break;
            }
            case 3u:
            {
                _968 = vec3(_918, _918 * 0.5, _918);
                _969 = vec3(31.0, 63.0, 31.0);
                break;
            }
        }
        vec3 _988 = _17.xyz + _968;
        _17 = vec4(_988.x, _988.y, _988.z, _17.w);
        vec3 _997 = round(_17.xyz * _969) / _969;
        _17 = vec4(_997.x, _997.y, _997.z, _17.w);
    }
}

